@model MvcTodoList1.Models.TodoModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.0/css/all.min.css" integrity="sha512-DxV+EoADOkOygM4IR9yXP8Sb2qwgidEmeqAEmDKIOfPRQZOWbXCzLC6vjbZyy0vPisbH2SyW27+ddLVCN+OMzQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<h2>Create Task <i class="fa-solid fa-plus"></i></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.tName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dtmDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dtmDate, new { htmlAttributes = new { @class = "datepicker" } })
            @Html.ValidationMessageFor(model => model.dtmDate, "", new { @class = "text-danger" })
        </div>

        <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
        @section scripts{

            <script src="~/Scripts/jquery-ui-1.14.1.min.js"></script>
            <script>
                $(function () {
                    $(".datepicker").datepicker({
                        dateFormat: "dd-mm-yy",
                        changeMonth: true,
                        changeYear: true,
                        yearRange: "2010:2030",//"-10:+10",
                        // minDate: new Date(2017, 0, 1),
                        //maxDate:new Date(2018,0,1)
                        showOn: "both",
                        buttonText: "Date"

                    });
                });
            </script>
        }
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.tTim, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tTim, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tTim, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <button type="submit" value="Create" class="btn btn-danger">Submit</button>

        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
